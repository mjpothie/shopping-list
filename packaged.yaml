AWSTemplateFormatVersion: '2010-09-09'
Description: "Simple CRUD web service. State is stored in a DynamoDB table.\n  \n"
Globals:
  Function:
    Environment:
      Variables:
        ENDPOINT_OVERRIDE: ''
        TABLE_NAME: ''
    Timeout: 3
Outputs:
  HelloApi:
    Description: API Gateway endpoint URL for Prod stage for Hello function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloFunction:
    Description: Hello Lambda function
    Value:
      Fn::GetAtt:
      - HelloLambdaFunction
      - Arn
Resources:
  AddItemLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to add item.
      Events:
        GetResource:
          Properties:
            Method: POST
            Path: /items
          Type: Api
      Handler: lambdahandlers.add_item
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  CreateItemsTableLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to create table
      Events:
        GetResource:
          Properties:
            Method: POST
            Path: /_create_items_table
          Type: Api
      Handler: lambdahandlers.create_items_table
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DeleteItemLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to delete item.
      Events:
        GetResource:
          Properties:
            Method: DELETE
            Path: /items/{item_id}
          Type: Api
      Handler: lambdahandlers.delete_item
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  DynamoDBAccessPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/Lists
        Version: '2012-10-17'
      PolicyName: DynamoDBAccessPolicy
      Roles:
      - Ref: LambdaRootRole
    Type: AWS::IAM::Policy
  GetItemLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to get item details.
      Events:
        GetResource:
          Properties:
            Method: GET
            Path: /items/{item_id}
          Type: Api
      Handler: lambdahandlers.get_item
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  GetItemsLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to get item details.
      Events:
        GetResource:
          Properties:
            Method: GET
            Path: /items
          Type: Api
      Handler: lambdahandlers.get_item
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  HelloLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A hello world REST API
      Events:
        API:
          Properties:
            Method: ANY
            Path: /hello
          Type: Api
      Handler: lambdahandlers.hello
      Runtime: python3.6
    Type: AWS::Serverless::Function
  LambdaRootRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
    Type: AWS::IAM::Role
  ListTablesLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to create table
      Events:
        GetResource:
          Properties:
            Method: ANY
            Path: /_list_tables
          Type: Api
      Handler: lambdahandlers.list_tables
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  UpdateItemLambdaFunction:
    Properties:
      CodeUri: s3://shoppinglist-sam-matthew.pothier/a2fd992da6cd8e66f7ff03e06632d38d
      Description: A simple backend with RESTful API endpoint to add item.
      Events:
        GetResource:
          Properties:
            Method: POST
            Path: /items/{item_id}
          Type: Api
      Handler: lambdahandlers.add_item
      Role:
        Fn::GetAtt:
        - LambdaRootRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
